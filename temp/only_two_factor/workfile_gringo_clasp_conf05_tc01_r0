
#hide.
#show add/1.
#show remove/1.
#show design_type/1.
#show design_deletable/1.
#show design_available/1.
#show design_entity_det/1.
#show design_entity_loc/1.
#show design_compartment/1.
#show design_activity_rec/1.
#show design_activity_det/1.
compartment(c_02;c_05;c_22;c_23;c_01;c_17;c_14;c_35;c_11;c_07;c_18;c_31;c_34;c_27;c_26).
metabolite(ent_0,none).
metabolite(ent_1,none).
metabolite(ent_2,none).
metabolite(ent_3,none).
metabolite(ent_4,none).
gene(ent_5,none).
metabolite(ent_6,none).
metabolite(ent_7,none).
metabolite(ent_8,none).
metabolite(ent_9,none).
metabolite(ent_10,none).
metabolite(ent_11,none).
metabolite(ent_12,none).
metabolite(ent_13,none).
metabolite(ent_14,none).
metabolite(ent_15,none).
gene(ent_16,none).
metabolite(ent_17,none).
metabolite(ent_18,none).
metabolite(ent_19,none).
metabolite(ent_20,none).
protein(ent_21,none).
catalyses(ent_21,none,act_8).
catalyses(ent_21,none,act_11).
catalyses(ent_21,none,act_1).
catalyses(ent_21,none,act_3).
protein(ent_21,ver_0).
catalyses(ent_21,ver_0,act_8).
catalyses(ent_21,ver_0,act_11).
catalyses(ent_21,ver_0,act_23).
catalyses(ent_21,ver_0,act_13).
catalyses(ent_21,ver_0,act_3).
protein(ent_21,ver_1).
catalyses(ent_21,ver_1,act_22).
catalyses(ent_21,ver_1,act_24).
catalyses(ent_21,ver_1,act_3).
catalyses(ent_21,ver_1,act_11).
catalyses(ent_21,ver_1,act_1).
catalyses(ent_21,ver_1,act_3).
protein(ent_24,none).
catalyses(ent_24,none,act_13).
catalyses(ent_24,none,act_7).
catalyses(ent_24,none,act_4).
catalyses(ent_24,none,act_5).
catalyses(ent_24,none,act_10).
catalyses(ent_24,none,act_12).
catalyses(ent_24,none,act_9).
catalyses(ent_24,none,act_0).
protein(ent_24,ver_0).
catalyses(ent_24,ver_0,act_13).
catalyses(ent_24,ver_0,act_7).
catalyses(ent_24,ver_0,act_4).
catalyses(ent_24,ver_0,act_3).
catalyses(ent_24,ver_0,act_5).
catalyses(ent_24,ver_0,act_13).
catalyses(ent_24,ver_0,act_10).
catalyses(ent_24,ver_0,act_12).
catalyses(ent_24,ver_0,act_9).
catalyses(ent_24,ver_0,act_0).
reaction(act_0).
reaction(act_1).
expression(act_2).
reaction(act_3).
reaction(act_4).
reaction(act_5).
expression(act_6).
reaction(act_7).
reaction(act_8).
reaction(act_9).
reaction(act_10).
reaction(act_11).
reaction(act_12).
reaction(act_13).
expression(act_14).
expression(act_15).
expression(act_16).
expression(act_17).
expression(act_18).
expression(act_19).
expression(act_20).
expression(act_21).
reaction(act_22).
reaction(act_23).
reaction(act_24).
transport(act_25).
transport(act_26).
transport(act_27).
transport(act_28).
transport(act_29).
transport(act_30).
transport(act_31).
transport(act_32).
transport(act_33).
transport(act_34).
transport(act_35).
transport(act_36).
transport(act_37).
transport(act_38).
transport(act_39).
transport(act_40).
transport(act_41).
transport(act_42).
transport(act_43).
enz_required(act_0).
enz_compartment(c_35,act_0).
substrate(ent_12,none,c_35,act_0).
substrate(ent_9,none,c_35,act_0).
product(ent_10,none,c_35,act_0).
product(ent_19,none,c_35,act_0).
product(ent_7,none,c_35,act_0).
substrate(ent_2,none,c_35,act_1).
enz_required(act_1).
enz_compartment(c_35,act_1).
substrate(ent_9,none,c_35,act_1).
product(ent_10,none,c_35,act_1).
product(ent_20,none,c_35,act_1).
product(ent_7,none,c_35,act_1).
substrate(ent_5,none,c_18,act_2).
product(ent_21,none,c_35,act_2).
substrate(ent_1,none,c_35,act_3).
enz_required(act_3).
enz_compartment(c_35,act_3).
substrate(ent_9,none,c_35,act_3).
product(ent_14,none,c_35,act_3).
product(ent_10,none,c_35,act_3).
product(ent_20,none,c_35,act_3).
substrate(ent_13,none,c_35,act_4).
enz_required(act_4).
enz_compartment(c_35,act_4).
substrate(ent_9,none,c_35,act_4).
product(ent_3,none,c_35,act_4).
product(ent_10,none,c_35,act_4).
product(ent_7,none,c_35,act_4).
substrate(ent_6,none,c_35,act_5).
enz_required(act_5).
enz_compartment(c_35,act_5).
substrate(ent_9,none,c_35,act_5).
product(ent_2,none,c_35,act_5).
product(ent_10,none,c_35,act_5).
product(ent_7,none,c_35,act_5).
substrate(ent_16,none,c_18,act_6).
product(ent_24,none,c_35,act_6).
enz_required(act_7).
enz_compartment(c_35,act_7).
substrate(ent_11,none,c_35,act_7).
substrate(ent_9,none,c_35,act_7).
product(ent_0,none,c_35,act_7).
product(ent_10,none,c_35,act_7).
product(ent_1,none,c_35,act_7).
enz_required(act_8).
enz_compartment(c_35,act_8).
substrate(ent_19,none,c_35,act_8).
substrate(ent_9,none,c_35,act_8).
product(ent_10,none,c_35,act_8).
product(ent_20,none,c_35,act_8).
product(ent_15,none,c_35,act_8).
substrate(ent_18,none,c_35,act_9).
enz_required(act_9).
enz_compartment(c_35,act_9).
substrate(ent_9,none,c_35,act_9).
product(ent_2,none,c_35,act_9).
product(ent_0,none,c_35,act_9).
product(ent_10,none,c_35,act_9).
substrate(ent_4,none,c_35,act_10).
enz_required(act_10).
enz_compartment(c_35,act_10).
substrate(ent_9,none,c_35,act_10).
product(ent_0,none,c_35,act_10).
product(ent_10,none,c_35,act_10).
product(ent_19,none,c_35,act_10).
substrate(ent_3,none,c_35,act_11).
enz_required(act_11).
enz_compartment(c_35,act_11).
substrate(ent_9,none,c_35,act_11).
product(ent_0,none,c_35,act_11).
product(ent_10,none,c_35,act_11).
product(ent_20,none,c_35,act_11).
substrate(ent_17,none,c_35,act_12).
enz_required(act_12).
enz_compartment(c_35,act_12).
substrate(ent_9,none,c_35,act_12).
product(ent_1,none,c_35,act_12).
product(ent_10,none,c_35,act_12).
product(ent_7,none,c_35,act_12).
substrate(ent_8,none,c_35,act_13).
enz_required(act_13).
enz_compartment(c_35,act_13).
substrate(ent_9,none,c_35,act_13).
product(ent_3,none,c_35,act_13).
product(ent_0,none,c_35,act_13).
product(ent_10,none,c_35,act_13).
substrate(ent_16,none,c_18,act_14).
product(ent_24,ver_0,c_35,act_14).
substrate(ent_5,none,c_18,act_15).
product(ent_21,ver_0,c_35,act_15).
substrate(ent_5,none,c_18,act_16).
product(ent_21,ver_1,c_35,act_16).
substrate(ent_5,none,c_18,act_17).
product(ent_21,none,c_35,act_17).
substrate(ent_16,none,c_18,act_18).
product(ent_21,ver_0,c_35,act_18).
substrate(ent_5,none,c_18,act_19).
product(ent_21,ver_1,c_35,act_19).
substrate(ent_16,none,c_18,act_20).
product(ent_24,none,c_35,act_20).
substrate(ent_5,none,c_18,act_21).
product(ent_24,ver_0,c_35,act_21).
substrate(ent_18,none,c_35,act_22).
enz_required(act_22).
enz_compartment(c_35,act_22).
substrate(ent_19,none,c_35,act_22).
product(ent_2,none,c_35,act_22).
product(ent_0,none,c_35,act_22).
product(ent_1,none,c_35,act_22).
enz_required(act_23).
enz_compartment(c_35,act_23).
substrate(ent_19,none,c_35,act_23).
substrate(ent_17,none,c_35,act_23).
product(ent_2,none,c_35,act_23).
substrate(ent_6,none,c_35,act_24).
substrate(ent_18,none,c_35,act_24).
enz_required(act_24).
enz_compartment(c_35,act_24).
product(ent_19,none,c_35,act_24).
product(ent_20,none,c_35,act_24).
substrate(ent_10,none,c_01,act_25).
product(ent_10,none,c_05,act_25).
substrate(ent_18,none,c_01,act_26).
product(ent_18,none,c_05,act_26).
substrate(ent_17,none,c_01,act_27).
product(ent_17,none,c_05,act_27).
substrate(ent_15,none,c_01,act_28).
product(ent_15,none,c_05,act_28).
substrate(ent_14,none,c_01,act_29).
product(ent_14,none,c_05,act_29).
substrate(ent_13,none,c_01,act_30).
product(ent_13,none,c_05,act_30).
substrate(ent_11,none,c_01,act_31).
product(ent_11,none,c_05,act_31).
substrate(ent_12,none,c_01,act_32).
product(ent_12,none,c_05,act_32).
substrate(ent_1,none,c_01,act_33).
product(ent_1,none,c_05,act_33).
substrate(ent_9,none,c_01,act_34).
product(ent_9,none,c_05,act_34).
substrate(ent_20,none,c_01,act_35).
product(ent_20,none,c_05,act_35).
substrate(ent_0,none,c_01,act_36).
product(ent_0,none,c_05,act_36).
substrate(ent_6,none,c_01,act_37).
product(ent_6,none,c_05,act_37).
substrate(ent_19,none,c_01,act_38).
product(ent_19,none,c_05,act_38).
substrate(ent_4,none,c_01,act_39).
product(ent_4,none,c_05,act_39).
substrate(ent_8,none,c_01,act_40).
product(ent_8,none,c_05,act_40).
substrate(ent_2,none,c_01,act_41).
product(ent_2,none,c_05,act_41).
substrate(ent_7,none,c_01,act_42).
product(ent_7,none,c_05,act_42).
substrate(ent_3,none,c_01,act_43).
product(ent_3,none,c_05,act_43).
model(m_36;m_34;m_35;m_31).
added_to_model(setup_present(ent_8,none,c_35),m_36).
added_to_model(setup_present(ent_9,none,c_35),m_36).
added_to_model(setup_present(ent_17,none,c_35),m_36).
added_to_model(setup_present(ent_11,none,c_35),m_36).
added_to_model(setup_present(ent_5,none,c_18),m_36).
added_to_model(setup_present(ent_12,none,c_35),m_36).
added_to_model(setup_present(ent_16,none,c_18),m_36).
added_to_model(setup_present(ent_6,none,c_35),m_36).
added_to_model(setup_present(ent_4,none,c_35),m_36).
added_to_model(setup_present(ent_13,none,c_35),m_36).
added_to_model(setup_present(ent_18,none,c_35),m_36).
added_to_model(act_17,m_36).
added_to_model(act_11,m_36).
added_to_model(act_8,m_36).
added_to_model(act_5,m_36).
added_to_model(act_12,m_36).
added_to_model(act_3,m_36).
added_to_model(act_13,m_36).
added_to_model(act_10,m_36).
added_to_model(act_1,m_36).
added_to_model(act_21,m_36).
added_to_model(setup_present(ent_18,none,c_35),m_34).
added_to_model(setup_present(ent_9,none,c_35),m_34).
added_to_model(setup_present(ent_17,none,c_35),m_34).
added_to_model(setup_present(ent_11,none,c_35),m_34).
added_to_model(setup_present(ent_5,none,c_18),m_34).
added_to_model(setup_present(ent_12,none,c_35),m_34).
added_to_model(setup_present(ent_16,none,c_18),m_34).
added_to_model(setup_present(ent_6,none,c_35),m_34).
added_to_model(setup_present(ent_4,none,c_35),m_34).
added_to_model(setup_present(ent_13,none,c_35),m_34).
added_to_model(setup_present(ent_8,none,c_35),m_34).
added_to_model(act_7,m_34).
added_to_model(act_0,m_34).
added_to_model(act_2,m_34).
added_to_model(act_3,m_34).
added_to_model(act_8,m_34).
added_to_model(act_21,m_34).
added_to_model(setup_present(ent_8,none,c_35),m_35).
added_to_model(setup_present(ent_9,none,c_35),m_35).
added_to_model(setup_present(ent_17,none,c_35),m_35).
added_to_model(setup_present(ent_11,none,c_35),m_35).
added_to_model(setup_present(ent_5,none,c_18),m_35).
added_to_model(setup_present(ent_12,none,c_35),m_35).
added_to_model(setup_present(ent_16,none,c_18),m_35).
added_to_model(setup_present(ent_6,none,c_35),m_35).
added_to_model(setup_present(ent_4,none,c_35),m_35).
added_to_model(setup_present(ent_13,none,c_35),m_35).
added_to_model(setup_present(ent_18,none,c_35),m_35).
added_to_model(act_15,m_35).
added_to_model(act_7,m_35).
added_to_model(act_0,m_35).
added_to_model(act_8,m_35).
added_to_model(act_23,m_35).
added_to_model(act_11,m_35).
added_to_model(act_9,m_35).
added_to_model(act_13,m_35).
added_to_model(act_3,m_35).
added_to_model(act_10,m_35).
added_to_model(act_21,m_35).
added_to_model(setup_present(ent_8,none,c_35),m_31).
added_to_model(setup_present(ent_9,none,c_35),m_31).
added_to_model(setup_present(ent_17,none,c_35),m_31).
added_to_model(setup_present(ent_11,none,c_35),m_31).
added_to_model(setup_present(ent_5,none,c_18),m_31).
added_to_model(setup_present(ent_12,none,c_35),m_31).
added_to_model(setup_present(ent_16,none,c_18),m_31).
added_to_model(setup_present(ent_6,none,c_35),m_31).
added_to_model(setup_present(ent_4,none,c_35),m_31).
added_to_model(setup_present(ent_13,none,c_35),m_31).
added_to_model(setup_present(ent_18,none,c_35),m_31).
added_to_model(act_12,m_31).
added_to_model(act_17,m_31).
added_to_model(act_3,m_31).
added_to_model(act_8,m_31).
added_to_model(act_10,m_31).
added_to_model(act_21,m_31).
nr(0,m_36).
probability(2, m_36).
nr(1,m_34).
probability(2, m_34).
nr(2,m_35).
probability(2, m_35).
nr(3,m_31).
probability(2, m_31).
0{design_entity_det(ent_9),remove(setup_present(ent_16, none, c_18)),design_activity_rec(act_10),design_compartment(c_34),design_compartment(c_09),design_compartment(c_02),design_available(ent_7),add(setup_present(ent_0, none, c_01)),design_available(ent_13),design_entity_det(ent_19),add(setup_present(ent_1, none, c_01)),design_entity_det(ent_20),design_activity_rec(act_7),add(act_42),add(act_40),design_entity_det(ent_18),add(setup_present(ent_13, none, c_01)),add(act_29),design_available(ent_18),add(setup_present(ent_12, none, c_01)),add(setup_present(ent_20, none, c_01)),design_entity_det(ent_2),add(setup_present(ent_10, none, c_01)),design_activity_rec(act_5),design_compartment(c_20),design_entity_det(ent_11),design_entity_det(ent_4),add(act_38),design_available(ent_11),design_entity_det(ent_1),design_compartment(c_28),remove(setup_present(ent_5, none, c_18)),design_compartment(c_05),design_compartment(c_12),design_compartment(c_17),design_activity_rec(act_1),design_activity_rec(act_3),design_available(ent_1),design_activity_rec(act_22),design_entity_det(ent_0),add(setup_present(ent_3, none, c_01)),design_available(ent_2),add(act_25),design_compartment(c_24),add(act_37),add(act_43),add(setup_present(ent_15, none, c_01)),design_available(ent_9),design_compartment(c_16),design_compartment(c_30),design_compartment(c_32),design_compartment(c_31),add(act_32),add(act_30),design_compartment(c_04),add(setup_present(ent_19, none, c_01)),design_available(ent_10),design_available(ent_4),design_available(ent_3),design_available(ent_21),design_compartment(c_26),design_entity_det(ent_7),design_available(ent_24),add(act_36),design_entity_det(ent_14),design_entity_det(ent_6),add(act_39),design_activity_rec(act_11),design_available(ent_14),design_activity_rec(act_13),design_available(ent_0),design_compartment(c_33),design_entity_det(ent_12),design_deletable(ent_5),add(setup_present(ent_14, none, c_01)),design_compartment(c_29),design_activity_rec(act_0),design_deletable(ent_16),design_type(adam_two_factor_exp),design_compartment(c_23),design_entity_det(ent_8),design_available(ent_15),design_compartment(c_21),design_activity_rec(act_12),design_compartment(c_07),design_entity_det(ent_15),add(act_26),design_available(ent_6),design_activity_rec(act_9),add(setup_present(ent_7, none, c_01)),design_entity_loc(ent_24),design_compartment(c_08),add(setup_present(ent_17, none, c_01)),design_compartment(c_27),add(act_28),design_entity_det(ent_3),design_compartment(c_06),design_compartment(c_14),design_compartment(c_18),design_available(ent_20),design_entity_det(ent_21),add(act_34),design_compartment(c_03),add(setup_present(ent_11, none, c_01)),design_available(ent_19),design_compartment(c_10),design_activity_rec(act_23),design_activity_rec(act_4),design_compartment(c_13),design_entity_det(ent_24),design_entity_det(ent_10),add(setup_present(ent_9, none, c_01)),design_activity_rec(act_24),design_available(ent_8),design_available(ent_12),design_entity_loc(ent_21),add(setup_present(ent_18, none, c_01)),design_available(ent_17),design_compartment(c_25),design_compartment(c_15),design_compartment(c_22),add(act_27),add(setup_present(ent_6, none, c_01)),add(act_31),add(act_35),design_compartment(c_11),add(setup_present(ent_2, none, c_01)),add(setup_present(ent_8, none, c_01)),add(act_41),design_entity_det(ent_17),design_activity_rec(act_8),add(setup_present(ent_4, none, c_01)),design_compartment(c_19),add(act_33),design_entity_det(ent_13)}135.

designed :- designed(experiment(adam_two_factor_exp, Gene, Metabolite)), gene(Gene, Ver), metabolite(Metabolite, Ver).
designed :- designed(experiment(transp_reconstruction_exp, Activity, Entity)), activity(Activity), entity(Entity, Ver).
designed :- designed(experiment(enz_reconstruction_exp, Activity, Entity)), activity(Activity), entity(Entity, Ver).
designed :- designed(experiment(basic_reconstruction_exp, Activity)), activity(Activity).
designed :- designed(experiment(detection_activity_exp, Activity)), activity(Activity).
designed :- designed(experiment(localisation_entity_exp, Entity, Compartment)), entity(Entity, Ver), compartment(Compartment).
designed :- designed(experiment(detection_entity_exp, Entity)), entity(Entity, Ver).

:- not designed.

:- designed(Experiment1), designed(Experiment2), Experiment1 != Experiment2.

has_true_model :- predicts(Model, Experiment, true), model(Model), designed(Experiment).
has_false_model :- predicts(Model, Experiment, false), model(Model), designed(Experiment).
:- not has_true_model.
:- not has_false_model.

:- designed(experiment(adam_two_factor_exp, Gene, Metabolite)), add(Whatever).
:- designed(experiment(adam_two_factor_exp, Gene, Metabolite)), remove(Whatever).
:- involved(Entity, Version1, Model), involved(Entity, Version2, Model), Version1 != Version2.

entity_in_model(Entity, Version, Compartment, Model) :- in_model(setup_present(Entity, Version, Compartment), Model).
entity_in_model(Entity, Version, Compartment, Model) :- synthesizable(Entity, Version, Compartment, Model).
:- add(Activity), substrate(Ent,Ver,Comp,Activity), model(Model), not entity_in_model(Ent, Ver, Comp, Model).
:- designed(experiment(adam_two_factor_exp, ent_16, ent_19)).
:- designed(experiment(adam_two_factor_exp, ent_16, ent_20)).

#const n = 40.

exp_score(0,Prb,0,0) :- indifferent(Model, Experiment), designed(Experiment), model(Model), nr(0,Model), probability(Prb, Model).
exp_score(0,0,Prb,0) :- predicts(Model, Experiment, true), designed(Experiment), model(Model), nr(0,Model), probability(Prb, Model).
exp_score(0,0,0,Prb) :- predicts(Model, Experiment, false), designed(Experiment), model(Model), nr(0,Model), probability(Prb, Model).

exp_score(I,Ind+Prb,Tr,Fa) :- exp_score(I-1, Ind, Tr, Fa), indifferent(Model, Experiment), designed(Experiment), model(Model), nr(I, Model), probability(Prb, Model).
exp_score(I,Ind,Tr+Prb,Fa) :- exp_score(I-1, Ind, Tr, Fa), predicts(Model, Experiment, true), designed(Experiment), model(Model), nr(I, Model), probability(Prb, Model).
exp_score(I,Ind,Tr,Fa+Prb) :- exp_score(I-1, Ind, Tr, Fa), predicts(Model, Experiment, false), designed(Experiment), model(Model), nr(I, Model), probability(Prb, Model).

exp_score(I) :- exp_score(I,Ind,Tr,Fa).

final_score(I,Ind,Tr,Fa) :- exp_score(I,Ind,Tr,Fa), not exp_score(I+1).

final_score(|Tr*10-n| + |Fa*10-n| + Ind*10) :- final_score(I,Ind,Tr,Fa).
#minimize[final_score(Score) = Score@2].
cost(1, 0) :- design_entity_det(ent_9).
cost(1, 1) :- remove(setup_present(ent_16, none, c_18)).
cost(5, 2) :- design_activity_rec(act_10).
cost(1, 3) :- design_compartment(c_34).
cost(1, 4) :- design_compartment(c_09).
cost(1, 5) :- design_compartment(c_02).
cost(1, 6) :- design_available(ent_7).
cost(1, 7) :- add(setup_present(ent_0, none, c_01)).
cost(1, 8) :- design_available(ent_13).
cost(1, 9) :- design_entity_det(ent_19).
cost(1, 10) :- add(setup_present(ent_1, none, c_01)).
cost(1, 11) :- design_entity_det(ent_20).
cost(5, 12) :- design_activity_rec(act_7).
cost(1, 13) :- add(act_42).
cost(1, 14) :- add(act_40).
cost(1, 15) :- design_entity_det(ent_18).
cost(1, 16) :- add(setup_present(ent_13, none, c_01)).
cost(1, 17) :- add(act_29).
cost(1, 18) :- design_available(ent_18).
cost(1, 19) :- add(setup_present(ent_12, none, c_01)).
cost(1, 20) :- add(setup_present(ent_20, none, c_01)).
cost(1, 21) :- design_entity_det(ent_2).
cost(1, 22) :- add(setup_present(ent_10, none, c_01)).
cost(5, 23) :- design_activity_rec(act_5).
cost(1, 24) :- design_compartment(c_20).
cost(1, 25) :- design_entity_det(ent_11).
cost(1, 26) :- design_entity_det(ent_4).
cost(1, 27) :- add(act_38).
cost(1, 28) :- design_available(ent_11).
cost(1, 29) :- design_entity_det(ent_1).
cost(1, 30) :- design_compartment(c_28).
cost(1, 31) :- remove(setup_present(ent_5, none, c_18)).
cost(1, 32) :- design_compartment(c_05).
cost(1, 33) :- design_compartment(c_12).
cost(1, 34) :- design_compartment(c_17).
cost(5, 35) :- design_activity_rec(act_1).
cost(5, 36) :- design_activity_rec(act_3).
cost(1, 37) :- design_available(ent_1).
cost(5, 38) :- design_activity_rec(act_22).
cost(1, 39) :- design_entity_det(ent_0).
cost(1, 40) :- add(setup_present(ent_3, none, c_01)).
cost(1, 41) :- design_available(ent_2).
cost(1, 42) :- add(act_25).
cost(1, 43) :- design_compartment(c_24).
cost(1, 44) :- add(act_37).
cost(1, 45) :- add(act_43).
cost(1, 46) :- add(setup_present(ent_15, none, c_01)).
cost(1, 47) :- design_available(ent_9).
cost(1, 48) :- design_compartment(c_16).
cost(1, 49) :- design_compartment(c_30).
cost(1, 50) :- design_compartment(c_32).
cost(1, 51) :- design_compartment(c_31).
cost(1, 52) :- add(act_32).
cost(1, 53) :- add(act_30).
cost(1, 54) :- design_compartment(c_04).
cost(1, 55) :- add(setup_present(ent_19, none, c_01)).
cost(1, 56) :- design_available(ent_10).
cost(1, 57) :- design_available(ent_4).
cost(1, 58) :- design_available(ent_3).
cost(1, 59) :- design_available(ent_21).
cost(1, 60) :- design_compartment(c_26).
cost(1, 61) :- design_entity_det(ent_7).
cost(1, 62) :- design_available(ent_24).
cost(1, 63) :- add(act_36).
cost(1, 64) :- design_entity_det(ent_14).
cost(1, 65) :- design_entity_det(ent_6).
cost(1, 66) :- add(act_39).
cost(5, 67) :- design_activity_rec(act_11).
cost(1, 68) :- design_available(ent_14).
cost(5, 69) :- design_activity_rec(act_13).
cost(1, 70) :- design_available(ent_0).
cost(1, 71) :- design_compartment(c_33).
cost(1, 72) :- design_entity_det(ent_12).
cost(1, 73) :- design_deletable(ent_5).
cost(1, 74) :- add(setup_present(ent_14, none, c_01)).
cost(1, 75) :- design_compartment(c_29).
cost(5, 76) :- design_activity_rec(act_0).
cost(1, 77) :- design_deletable(ent_16).
cost(1, 78) :- design_type(adam_two_factor_exp).
cost(1, 79) :- design_compartment(c_23).
cost(1, 80) :- design_entity_det(ent_8).
cost(1, 81) :- design_available(ent_15).
cost(1, 82) :- design_compartment(c_21).
cost(5, 83) :- design_activity_rec(act_12).
cost(1, 84) :- design_compartment(c_07).
cost(1, 85) :- design_entity_det(ent_15).
cost(1, 86) :- add(act_26).
cost(1, 87) :- design_available(ent_6).
cost(5, 88) :- design_activity_rec(act_9).
cost(1, 89) :- add(setup_present(ent_7, none, c_01)).
cost(1, 90) :- design_entity_loc(ent_24).
cost(1, 91) :- design_compartment(c_08).
cost(1, 92) :- add(setup_present(ent_17, none, c_01)).
cost(1, 93) :- design_compartment(c_27).
cost(1, 94) :- add(act_28).
cost(1, 95) :- design_entity_det(ent_3).
cost(1, 96) :- design_compartment(c_06).
cost(1, 97) :- design_compartment(c_14).
cost(1, 98) :- design_compartment(c_18).
cost(1, 99) :- design_available(ent_20).
cost(1, 100) :- design_entity_det(ent_21).
cost(1, 101) :- add(act_34).
cost(1, 102) :- design_compartment(c_03).
cost(1, 103) :- add(setup_present(ent_11, none, c_01)).
cost(1, 104) :- design_available(ent_19).
cost(1, 105) :- design_compartment(c_10).
cost(3, 106) :- design_activity_rec(act_23).
cost(5, 107) :- design_activity_rec(act_4).
cost(1, 108) :- design_compartment(c_13).
cost(1, 109) :- design_entity_det(ent_24).
cost(1, 110) :- design_entity_det(ent_10).
cost(1, 111) :- add(setup_present(ent_9, none, c_01)).
cost(4, 112) :- design_activity_rec(act_24).
cost(1, 113) :- design_available(ent_8).
cost(1, 114) :- design_available(ent_12).
cost(1, 115) :- design_entity_loc(ent_21).
cost(1, 116) :- add(setup_present(ent_18, none, c_01)).
cost(1, 117) :- design_available(ent_17).
cost(1, 118) :- design_compartment(c_25).
cost(1, 119) :- design_compartment(c_15).
cost(1, 120) :- design_compartment(c_22).
cost(1, 121) :- add(act_27).
cost(1, 122) :- add(setup_present(ent_6, none, c_01)).
cost(1, 123) :- add(act_31).
cost(1, 124) :- add(act_35).
cost(1, 125) :- design_compartment(c_11).
cost(1, 126) :- add(setup_present(ent_2, none, c_01)).
cost(1, 127) :- add(setup_present(ent_8, none, c_01)).
cost(1, 128) :- add(act_41).
cost(1, 129) :- design_entity_det(ent_17).
cost(5, 130) :- design_activity_rec(act_8).
cost(1, 131) :- add(setup_present(ent_4, none, c_01)).
cost(1, 132) :- design_compartment(c_19).
cost(1, 133) :- add(act_33).
cost(1, 134) :- design_entity_det(ent_13).

total_cost(TCost) :- TCost = #sum[cost(Cost, Nr)=Cost].
#minimize[total_cost(TCost) = TCost@1].

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%% rules for exp design %%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

designed(experiment(adam_two_factor_exp, Gene, Metabolite)) :-
	design_type(adam_two_factor_exp),
	design_deletable(Gene),
	design_available(Metabolite).

designed(experiment(transp_reconstruction_exp, Activity, Entity)) :-
	design_type(transp_reconstruction_exp),
	design_activity_rec(Activity),
	design_available(Entity).

designed(experiment(enz_reconstruction_exp, Activity, Entity)) :-
	design_type(enz_reconstruction_exp),
	design_activity_rec(Activity),
	design_available(Entity).

designed(experiment(basic_reconstruction_exp, Activity)) :-
	design_type(basic_reconstruction_exp),
	design_activity_rec(Activity).

designed(experiment(detection_activity_exp, Activity)) :-
	design_type(detection_activity_exp),
	design_activity_det(Activity).

designed(experiment(localisation_entity_exp, Entity, Compartment)) :-
	design_type(localisation_entity_exp),
	design_entity_loc(Entity),
	design_compartment(Compartment).

designed(experiment(detection_entity_exp, Entity)) :-
	design_type(detection_entity_exp),
	design_entity_det(Entity).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%% application of interventions to all models %%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

removed(ActivityOrCondition, Model) :-
	remove(ActivityOrCondition),
	model(Model).

added_to_model(ActivityOrCondition, Model) :-
	add(ActivityOrCondition),
	model(Model).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% prediction rules %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%

growth(dummy).

indifferent(Model, Experiment) :-
	not predicts(Model, Experiment, true),
	not predicts(Model, Experiment, false),
	model(Model),
	designed(Experiment).

% Adams reconstruction
 predicts(Model, experiment(adam_two_factor_exp, Gene, Metabolite), false) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	not predicts(Model, experiment(adam_two_factor_exp, Gene, Metabolite), true),
	involved(Gene, GeneVer, Model),
	gene(Gene, GeneVer),
	involved(Metabolite, MetVersion, Model),
	metabolite(Metabolite, MetVersion).

 predicts(Model, experiment(adam_two_factor_exp, Gene, Metabolite), true) :-% for genes that produce enzymes
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	substrate(Gene, GeneVer, GeneComp, ExpressionAct),
	compartment(GeneComp),
	expression(ExpressionAct),
	in_model(ExpressionAct, Model),
	metabolite(Metabolite, MetVersion),
	% expression produces a catalyst
	product(Ent, Ver, Comp, ExpressionAct),
	catalyses(Ent, Ver, Reaction),
	in_model(Reaction, Model),
	enz_required(Reaction),% redundancy, but better make sure (might also help the ASP solver)
	enz_compartment(SomeComp, Reaction),
	connected_compartments(Comp, SomeComp),
	% metabolite is within accepted distance from the catalysed reaction
	distance(Reaction, Metabolite, MetVersion, MetComp, Integer, Model),
	compartment(MetComp).

 predicts(Model, experiment(adam_two_factor_exp, Gene, Metabolite), true) :-% for genes that produce subunits of enzymes
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	substrate(Gene, GeneVer, GeneComp, ExpressionAct),
	compartment(GeneComp),
	expression(ExpressionAct),
	in_model(ExpressionAct, Model),
	metabolite(Metabolite, MetVersion),
	% expression produces sth that is involved in production of enzyme down the line
	product(EntTo, VerTo, CompTo, ExpressionAct),
	entity(EntFrom, VerFrom),
	compartment(CompFrom),
	path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, Int),
	int(Integer),
	catalyses(EntFrom, VerFrom, Reaction),
	% enzyme is in appropriate compartment
	enz_compartment(SomeComp, Reaction),
	connected_compartments(SomeComp, CompFrom),
	compartment(SomeComp),
	% metabolite is within accepted distance from the catalysed reaction
	distance(Reaction, Metabolite, MetVersion, MetComp, Integer, Model),
	compartment(MetComp).

int(0;1;2).% distance goes up to 2

distance(ActivityFrom, EntTo, VerTo, CompTo, 0, Model) :-
	product(EntTo, VerTo, CompTo, ActivityFrom),
	in_model(ActivityFrom, Model),
	reaction(ActivityFrom),% only metabolic reactions
	enz_required(ActivityFrom).% optimisation - only these activities make sense in the context of experiment

distance(ActivityFrom, EntTo, VerTo, CompTo, Int+1, Model) :-
	distance(ActivityFrom, InterEnt, InterVer, InterComp, Int, Model),
	substrate(InterEnt, InterVer, InterComp, InterActivity),
	product(EntTo, VerTo, CompTo, InterActivity),
	in_model(InterActivity, Model),
	reaction(InterActivity),% only metabolic reactions
	Int < 2,
	int(Int).


% in vitro reconstruction: transporter required
predicts(Model, experiment(transp_reconstruction_exp, Activity, Entity), true) :-
	in_model(Activity, Model),
	transp_required(Activity),
	involved(Entity, Version, Model),
	transports(Entity, Version, Activity).

predicts(Model, experiment(transp_reconstruction_exp, Activity, Entity), false) :-
	in_model(Activity, Model),
	transp_required(Activity),
	involved(Entity, Version, Model),% there is a version of the entity in the model
	not transports(Entity, Version, Activity),% that doesnt transport that stuff
	transports(Entity, OtherVersion, Activity).% but some propose that this entity could do that


% in vitro reconstruction: enzymatic
predicts(Model, experiment(enz_reconstruction_exp, Activity, Entity), true) :-
	in_model(Activity, Model),
	enz_required(Activity),
	involved(Entity, Version, Model),
	catalyses(Entity, Version, Activity).

predicts(Model, experiment(enz_reconstruction_exp, Activity, Entity), false) :-
	in_model(Activity, Model),
	enz_required(Activity),
	involved(Entity, Version, Model),% there is a version of the entity in the model
	not catalyses(Entity, Version, Activity),% that doesnt catalyse the reaction
	catalyses(Entity, OtherVersion, Activity).% but some propose that this entity could do that


% in vitro reconstruction: basic
predicts(Model, experiment(basic_reconstruction_exp, Activity), true) :-
	activity(Activity),
	in_model(Activity, Model),
	not enz_required(Activity),
	not transp_required(Activity).


% localisation experiments: detecting entities
predicts(Model, experiment(localisation_entity_exp, Entity, Compartment), true) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	compartment(Compartment),
	involved(Entity, Version, Model),
	synthesizable(Entity, Version, Compartment, Model).

predicts(Model, experiment(localisation_entity_exp, Entity, Compartment), true) :-
	compartment(Compartment),
	in_model(setup_present(Entity, Version, Compartment), Model).

predicts(Model, experiment(localisation_entity_exp, Entity, Compartment), false) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	compartment(Compartment),
	involved(Entity, Version, Model),
	not predicts(Model, experiment(localisation_entity_exp, Entity, Compartment), true).


% detection experiments: detecting entities
predicts(Model, experiment(detection_entity_exp, Entity), true) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	compartment(Compartment),
	involved(Entity, Version, Model),
	synthesizable(Entity, Version, Compartment, Model).

predicts(Model, experiment(detection_entity_exp, Entity), true) :-% for stuff in the setup
	compartment(Compartment),
	in_model(setup_present(Entity, Version, Compartment), Model).

predicts(Model, experiment(detection_entity_exp, Entity), false) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	involved(Entity, Version, Model),
	not predicts(Model, experiment(detection_entity_exp, Entity), true).


% growth experiments (or any other detecting activities)
predicts(Model, experiment(detection_activity_exp, Activity), true) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	in_model(Activity, Model),
	activity(Activity),
	active(Activity, Model).

predicts(Model, experiment(detection_activity_exp, Activity), false) :-
	not predicts(Model, experiment(detection_activity_exp, GrowthActivity), false),
	growth(GrowthActivity),
	in_model(Activity, Model),
	activity(Activity),
	not active(Activity, Model).

predicts(Model, experiment(detection_activity_exp, GrowthActivity), false) :-
	growth(GrowthActivity),
	in_model(GrowthActivity, Model),
	activity(GrowthActivity),
	not active(GrowthActivity, Model).

% involved species (to handle open world)
involved(Entity, Version, Model) :-
	compartment(Compartment),
	initially_present(Entity, Version, Compartment, Model).

involved(Entity, Version, Model) :-
	compartment(Compartment),
	product(Entity, Version, Compartment, Activity),
	in_model(Activity, Model).

involved(Entity, Version, Model) :-
	compartment(Compartment),
	substrate(Entity, Version, Compartment, Activity),
	in_model(Activity, Model).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% model specification rules %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
activity(Activity) :- reaction(Activity).
activity(Activity) :- transport(Activity).
activity(Activity) :- expression(Activity).
activity(Activity) :- complex_formation(Activity).
activity(Activity) :- growth(Activity).

entity(Entity, Version) :- metabolite(Entity, Version).
entity(Entity, Version) :- complex(Entity, Version).
entity(Entity, Version) :- protein(Entity, Version).
entity(Entity, Version) :- gene(Entity, Version).

connected_compartments(Compartment2,Compartment1) :- connected_compartments(Compartment1,Compartment2).
connected_compartments(Compartment,Compartment) :- compartment(Compartment).

in_model(ActivityOrSetup, Model) :-
	added_to_model(ActivityOrSetup, Model),
	not removed(ActivityOrSetup, Model).

initially_present(Entity, Version, Compartment, Model) :-
	in_model(setup_present(Entity, Version, Compartment), Model).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% synthesizable Entity rules %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
synthesizable(Ent, Version, Compartment, Model) :-
	activity(Activity),
	product(Ent, Version, Compartment, Activity),
	active(Activity, Model).

active(Activity, Model) :-
	activity(Activity),
	in_model(Activity, Model),
	not eliminated(Activity, Model).

eliminated(Activity, Model) :-
	eliminated(Activity, Model, Int),
	iteration(Int).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% activities elimination rules %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% iterations counter
iteration(0).
iteration(1).

iteration(Int+2) :-
	Int < 44,
	iteration(Int),
	eliminated(Activity, Model, Int+1),
	not eliminated(Activity, Model, Int),
	in_model(Activity, Model),
	activity(Activity),
	model(Model).

% reachability of one specie from another going only from products to substrates (i.e. back).
path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, 0) :-
	product(EntFrom, VerFrom, CompFrom, Activity),
	substrate(EntTo, VerTo, CompTo, Activity),
	in_model(Activity, Model),
	activity(Activity).

path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, 0) :-
	product(EntFrom, VerFrom, CompFrom, Activity),
	substrate(InterEnt, InterVer, InterComp, Activity),
	in_model(Activity, Model),
	path_back_from_to(InterEnt, InterVer, InterComp, EntTo, VerTo, CompTo, Model, 0).

% reachability for subsequent iterations.
path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, Int+1) :-
	iteration(Int),
	product(EntFrom, VerFrom, CompFrom, Activity),
	substrate(EntTo, VerTo, CompTo, Activity),
	in_model(Activity, Model),
	not eliminated(Activity, Model, Int), % not eliminated on previous iteration
	activity(Activity).

path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, Int+1) :-
	iteration(Int),
	product(EntFrom, VerFrom, CompFrom, Activity),
	substrate(InterEnt, InterVer, InterComp, Activity),
	in_model(Activity, Model),
	not eliminated(Activity, Model, Int), % not eliminated on previous iteration
	path_back_from_to(InterEnt, InterVer, InterComp, EntTo, VerTo, CompTo, Model, Int+1).

% is initially_present entity reachable from particular entity
path_back_to_initially_present(EntFrom, VerFrom, CompFrom, Model, Int) :-
	iteration(Int),
	path_back_from_to(EntFrom, VerFrom, CompFrom, EntTo, VerTo, CompTo, Model, Int),
	initially_present(EntTo, VerTo, CompTo, Model).

path_back_to_initially_present(Ent, Ver, Comp, Model, Int) :-
	iteration(Int),
	initially_present(Ent, Ver, Comp, Model).

% has enzymes/transporter
has_enzyme(Activity, Model, Int) :-
	iteration(Int),
	in_model(Activity, Model),
	enz_required(Activity),
	compartment(Comp),
	enz_compartment(Comp, Activity),
	catalyses(Entity, Version, Activity),
	connected_compartments(SomeComp, Comp),
	path_back_to_initially_present(Entity, Version, SomeComp, Model, Int).

has_transporter(Activity, Model, Int) :-
	iteration(Int),
	in_model(Activity, Model),
	transp_required(Activity),
	compartment(Comp),
	transp_compartment(Comp, Activity),
	transports(Entity, Version, Activity),
	path_back_to_initially_present(Entity, Version, Comp, Model, Int).

% elimination of activities
eliminated(Activity, Model, Int) :-
	iteration(Int),
	activity(Activity),
	in_model(Activity, Model),
	substrate(EntFrom, VerFrom, CompFrom, Activity),
	not path_back_to_initially_present(EntFrom, VerFrom, CompFrom, Model, Int).

eliminated(Activity, Model, Int) :-
	iteration(Int),
	activity(Activity),
	in_model(Activity, Model),
	enz_required(Activity),
	not has_enzyme(Activity, Model, Int).

eliminated(Activity, Model, Int) :-
	iteration(Int),
	activity(Activity),
	in_model(Activity, Model),
	transp_required(Activity),
	not has_transporter(Activity, Model, Int).